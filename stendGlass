Shader "Unlit/StendGlass"
{
    Properties
    {
        _MainTex ("Texture", 2D) = "white" {}
        _Scale("Scale",float) = 10.
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }
        LOD 100

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };

            sampler2D _MainTex;
            float4 _MainTex_ST;
            float _Scale;

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = TRANSFORM_TEX(v.uv, _MainTex);
                return o;
            }

            float2 random22(float2 st)
            {
                st = float2(dot(st, float2(127.1, 311.7)),
                            dot(st, float2(269.5, 183.3)));
                return -1.0 + 2.0 * frac(sin(st) * 43758.5453123);
            }

            float s;
            void srand(float2 p){
                s=sin(dot(p,float2(423.62431,321.54323)));
            }
            float rand(){
                s=frac(s*32322.65432+0.12333);
                return abs(frac(s));
            }
            float grad(float t){
                return 6.0*pow(t,5.0)-15.0*pow(t,4.0)+10.0*pow(t,3.0);
            }
            float2x2 rot(float a){return float2x2(cos(a),sin(a),-sin(a),cos(a));}


            float3 celler2D(float2 i,float2 sepc)
            {
                float2 sep = i * sepc;
                float2 fp = floor(sep);
                float2 sp = frac(sep);
                float dist = 50.;
                float2 mp = 0.;
                
                float2 ccs = 0.;

                [unroll]
                for (int y = -1; y <= 1; y++)
                {
                    [unroll]
                    for (int x = -1; x <= 1; x++)
                    {
                        float2 neighbor = float2(x, y);
                        float2 pos = float2(random22(fp+neighbor));
                        pos = sin(pos*6. +_Time.y/2.)* 0.5 + 0.5;
                        //pos += fp + pos;
                        //ccs += pos; 
                        float divs = length(neighbor + pos - sp);
                        mp = (dist  > divs)?pos:mp;
                        dist = (dist > divs)?divs:dist;
                    }
                }
                return float3(mp,dist);
            }

            float2 celler2D_returnUV(float2 i,float2 sepc)
            {
                float2 sep = i * sepc;
                float2 f = floor(sep);
                float dist = 5.;
                float2 ouv = float2(0.,0.);
                float t = _Time.y;

                for (int y = -3; y <= 3; y++)
                {
                    for (int x = -3; x <= 3; x++)
                    {
                        float2 neighbor = float2(x, y );
                        srand(f + neighbor);
                        float2 o;
                        o.x = rand();
                        o.y = rand();
                        o =mul( rot(t * (rand() - 0.1)),o);
                        float divs = length(f + neighbor + o - sep);
                        if(divs < dist){
                            dist=divs;
                            ouv  = o + neighbor + f;
                        }
                    }
                }
                return float2(ouv);
            }

            fixed4 frag (v2f i) : SV_Target
            {
                float2 uv = i.uv;
                float scale = _Scale;
                float2 cell = celler2D_returnUV(uv , (scale));
                uv = cell.xy / scale;
                fixed4 col = tex2D(_MainTex, uv);
                return col;
            }
            ENDCG
        }
    }
}
